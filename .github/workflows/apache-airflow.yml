name: Deploy Airflow Helm Chart

on:
  push:
    paths:
      - 'infra/scripts/install_airflow.sh'
      - '.github/workflows/apache-airflow.yml'
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
      - main
    paths:
      - 'infra/scripts/install_airflow.sh'
      - '.github/workflows/apache-airflow.yml'

env:
  ENV: 'production'
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  RESOURCE_GROUP_NAME: 'data-project-humidity-home-rg'
  PROJECT_NAME: 'aksairflow'
  AIRFLOW_DEFAULT_USER_EMAIL: ${{ secrets.AIRFLOW_DEFAULT_USER_EMAIL }}

jobs:
  deploy_airflow_dry_run:
    name: Dry Run of the Apache Airflow Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install requirements
        run: pip install -r ${{ github.workspace }}/apache-airflow/requirements.txt
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ env.ARM_CLIENT_ID }}","clientSecret":"${{ env.ARM_CLIENT_SECRET }}","subscriptionId":"${{ env.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ env.ARM_TENANT_ID }}"}'
      - name: Get AKS Kube Config
        run: ./infra/scripts/aks_get_credentials.sh
        env:
          RESOURCE_GROUP_NAME: ${{ env.RESOURCE_GROUP_NAME }}
          AKS_RESOURCE_NAME: ${{ env.PROJECT_NAME }}
      - name: Install Airflow Helm Chart
        run: ./infra/scripts/install_airflow.sh
        env:
          AIRFLOW_DEFAULT_USER_EMAIL: ${{ secrets.AIRFLOW_DEFAULT_USER_EMAIL }}
          DRY_RUN: true

  deploy_airflow:
    name: Deploy Apache Airflow Helm Chart
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.actor == github.repository_owner || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged }}
    needs: deploy_airflow_dry_run
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install requirements
        run: pip install -r ${{ github.workspace }}/apache-airflow/requirements.txt
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ env.ARM_CLIENT_ID }}","clientSecret":"${{ env.ARM_CLIENT_SECRET }}","subscriptionId":"${{ env.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ env.ARM_TENANT_ID }}"}'
      - name: Get AKS Kube Config
        run: ./infra/scripts/aks_get_credentials.sh
        env:
          RESOURCE_GROUP_NAME: ${{ env.RESOURCE_GROUP_NAME }}
          AKS_RESOURCE_NAME: ${{ env.PROJECT_NAME }}
      - name: Install Airflow Helm Chart
        run: ./infra/scripts/install_airflow.sh
        env:
          AIRFLOW_DEFAULT_USER_EMAIL: ${{ secrets.AIRFLOW_DEFAULT_USER_EMAIL }}
          DRY_RUN: false

